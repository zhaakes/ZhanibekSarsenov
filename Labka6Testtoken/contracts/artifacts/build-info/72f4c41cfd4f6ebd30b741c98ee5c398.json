{
	"id": "72f4c41cfd4f6ebd30b741c98ee5c398",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token.sol": {
				"content": "pragma solidity ^0.8.20;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract Lab6token is ERC20(\"Labka6TestToken\", \"LAB6T\"), Ownable {\r\n    \r\n    constructor(address initialOwner) Ownable(initialOwner) {}\r\n\r\n    function mintFifty() public onlyOwner {\r\n        _mint(msg.sender, 50 * 10**18);\r\n    }\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/token.sol": {
				"Lab6token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintFifty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token.sol\":247:481  contract Lab6token is ERC20(\"Labka6TestToken\", \"LAB6T\"), Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token.sol\":325:383  constructor(address initialOwner) Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token.sol\":367:379  initialOwner */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x4c61626b613654657374546f6b656e0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4c41423654000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/token.sol\":325:383  constructor(address initialOwner) Ownable(initialOwner) {} */\n  pop\n    /* \"contracts/token.sol\":247:481  contract Lab6token is ERC20(\"Labka6TestToken\", \"LAB6T\"), Ownable {... */\n  jump(tag_18)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token.sol\":247:481  contract Lab6token is ERC20(\"Labka6TestToken\", \"LAB6T\"), Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token.sol\":247:481  contract Lab6token is ERC20(\"Labka6TestToken\", \"LAB6T\"), Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x88f6e28d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/token.sol\":391:478  function mintFifty() public onlyOwner {... */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_72\n      swap1\n      tag_71\n      jump\t// in\n    tag_72:\n      dup1\n      iszero\n      tag_73\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_74\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_73)\n    tag_74:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_75:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_75\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token.sol\":391:478  function mintFifty() public onlyOwner {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/token.sol\":440:470  _mint(msg.sender, 50 * 10**18) */\n      tag_99\n        /* \"contracts/token.sol\":446:456  msg.sender */\n      caller\n        /* \"contracts/token.sol\":458:469  50 * 10**18 */\n      0x02b5e3af16b1880000\n        /* \"contracts/token.sol\":440:445  _mint */\n      tag_100\n        /* \"contracts/token.sol\":440:470  _mint(msg.sender, 50 * 10**18) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/token.sol\":391:478  function mintFifty() public onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_71\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_71\n      jump\t// in\n    tag_104:\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_124\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_130\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_139\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_140\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_158)\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_162)\n    tag_161:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_164:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_165:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_166:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_167:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_168:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_193\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_164\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":711:782   */\n      tag_194\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_165\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_195\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_166\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":881:910   */\n      tag_196\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_167\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_21:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_198\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_168\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_170:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_172:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_173:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_204\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_172\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_174:\n        /* \"#utility.yul\":1876:1900   */\n      tag_206\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_173\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_207:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_175:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_209\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_174\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_176:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_177:\n        /* \"#utility.yul\":2232:2256   */\n      tag_212\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_176\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_213:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_178:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_215\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_177\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_24:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_218\n      tag_170\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2525:2644   */\n    tag_217:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_219\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_175\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_220\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_178\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_179:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_180:\n        /* \"#utility.yul\":3089:3110   */\n      tag_223\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_179\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_27:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_225\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_180\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_181:\n        /* \"#utility.yul\":3426:3450   */\n      tag_227\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_176\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_31:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_229\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_181\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_34:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_232\n      tag_170\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3801:3920   */\n    tag_231:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_233\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_175\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_234\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_175\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_235\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_178\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_182:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_183:\n        /* \"#utility.yul\":4491:4513   */\n      tag_238\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_182\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_40:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_240\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_183\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_43:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_243\n      tag_170\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4822:4941   */\n    tag_242:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_244\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_175\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_184:\n        /* \"#utility.yul\":5168:5192   */\n      tag_246\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_173\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_53:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_248\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_184\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_63:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_251\n      tag_170\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5526:5645   */\n    tag_250:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_252\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_175\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_253\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_175\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_185:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_71:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_256:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_258\n      tag_185\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6329:6413   */\n    tag_257:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6867   */\n    tag_127:\n        /* \"#utility.yul\":6574:6578   */\n      0x00\n        /* \"#utility.yul\":6612:6614   */\n      0x60\n        /* \"#utility.yul\":6601:6610   */\n      dup3\n        /* \"#utility.yul\":6597:6615   */\n      add\n        /* \"#utility.yul\":6589:6615   */\n      swap1\n      pop\n        /* \"#utility.yul\":6625:6696   */\n      tag_260\n        /* \"#utility.yul\":6693:6694   */\n      0x00\n        /* \"#utility.yul\":6682:6691   */\n      dup4\n        /* \"#utility.yul\":6678:6695   */\n      add\n        /* \"#utility.yul\":6669:6675   */\n      dup7\n        /* \"#utility.yul\":6625:6696   */\n      tag_184\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6706:6778   */\n      tag_261\n        /* \"#utility.yul\":6774:6776   */\n      0x20\n        /* \"#utility.yul\":6763:6772   */\n      dup4\n        /* \"#utility.yul\":6759:6777   */\n      add\n        /* \"#utility.yul\":6750:6756   */\n      dup6\n        /* \"#utility.yul\":6706:6778   */\n      tag_181\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6788:6860   */\n      tag_262\n        /* \"#utility.yul\":6856:6858   */\n      0x40\n        /* \"#utility.yul\":6845:6854   */\n      dup4\n        /* \"#utility.yul\":6841:6859   */\n      add\n        /* \"#utility.yul\":6832:6838   */\n      dup5\n        /* \"#utility.yul\":6788:6860   */\n      tag_181\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6425:6867   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7053   */\n    tag_186:\n        /* \"#utility.yul\":6921:6998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6911:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x11\n        /* \"#utility.yul\":7015:7016   */\n      0x04\n        /* \"#utility.yul\":7008:7023   */\n      mstore\n        /* \"#utility.yul\":7042:7046   */\n      0x24\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7032:7047   */\n      revert\n        /* \"#utility.yul\":7059:7250   */\n    tag_157:\n        /* \"#utility.yul\":7099:7102   */\n      0x00\n        /* \"#utility.yul\":7118:7138   */\n      tag_265\n        /* \"#utility.yul\":7136:7137   */\n      dup3\n        /* \"#utility.yul\":7118:7138   */\n      tag_176\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7113:7138   */\n      swap2\n      pop\n        /* \"#utility.yul\":7152:7172   */\n      tag_266\n        /* \"#utility.yul\":7170:7171   */\n      dup4\n        /* \"#utility.yul\":7152:7172   */\n      tag_176\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7147:7172   */\n      swap3\n      pop\n        /* \"#utility.yul\":7195:7196   */\n      dup3\n        /* \"#utility.yul\":7192:7193   */\n      dup3\n        /* \"#utility.yul\":7188:7197   */\n      add\n        /* \"#utility.yul\":7181:7197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7216:7219   */\n      dup1\n        /* \"#utility.yul\":7213:7214   */\n      dup3\n        /* \"#utility.yul\":7210:7220   */\n      gt\n        /* \"#utility.yul\":7207:7243   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":7223:7241   */\n      tag_268\n      tag_186\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7207:7243   */\n    tag_267:\n        /* \"#utility.yul\":7059:7250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206c583de3e2c78e46649e27d95ab5c83811724a683f9dd791bb46f4521cfdf7e664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_182": {
									"entryPoint": 326,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:7",
										"nodeType": "YulBlock",
										"src": "0:6778:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											},
											{
												"body": {
													"nativeSrc": "1261:40:7",
													"nodeType": "YulBlock",
													"src": "1261:40:7",
													"statements": [
														{
															"nativeSrc": "1272:22:7",
															"nodeType": "YulAssignment",
															"src": "1272:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:7"
																},
																"nativeSrc": "1282:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:7",
														"nodeType": "YulTypedName",
														"src": "1244:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:7",
														"nodeType": "YulTypedName",
														"src": "1254:6:7",
														"type": ""
													}
												],
												"src": "1202:99:7"
											},
											{
												"body": {
													"nativeSrc": "1335:152:7",
													"nodeType": "YulBlock",
													"src": "1335:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:7"
																},
																"nativeSrc": "1345:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:7"
															},
															"nativeSrc": "1345:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:7"
																},
																"nativeSrc": "1442:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:7"
															},
															"nativeSrc": "1442:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:7"
																},
																"nativeSrc": "1466:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:7"
															},
															"nativeSrc": "1466:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:7"
											},
											{
												"body": {
													"nativeSrc": "1521:152:7",
													"nodeType": "YulBlock",
													"src": "1521:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nativeSrc": "1531:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:7"
															},
															"nativeSrc": "1531:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:7"
																},
																"nativeSrc": "1628:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:7"
															},
															"nativeSrc": "1628:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nativeSrc": "1652:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:7"
															},
															"nativeSrc": "1652:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:7"
											},
											{
												"body": {
													"nativeSrc": "1730:269:7",
													"nodeType": "YulBlock",
													"src": "1730:269:7",
													"statements": [
														{
															"nativeSrc": "1740:22:7",
															"nodeType": "YulAssignment",
															"src": "1740:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:7"
																},
																"nativeSrc": "1750:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:7"
																}
															]
														},
														{
															"nativeSrc": "1771:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:7"
																},
																"nativeSrc": "1797:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:7",
																"nodeType": "YulBlock",
																"src": "1848:51:7",
																"statements": [
																	{
																		"nativeSrc": "1862:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:7"
																			},
																			"nativeSrc": "1872:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:7"
																},
																"nativeSrc": "1821:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:7"
															},
															"nativeSrc": "1818:81:7",
															"nodeType": "YulIf",
															"src": "1818:81:7"
														},
														{
															"body": {
																"nativeSrc": "1951:42:7",
																"nodeType": "YulBlock",
																"src": "1951:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:7"
																			},
																			"nativeSrc": "1965:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:7"
																		},
																		"nativeSrc": "1965:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:7"
																		},
																		"nativeSrc": "1935:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:7"
																},
																"nativeSrc": "1912:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:7"
															},
															"nativeSrc": "1909:84:7",
															"nodeType": "YulIf",
															"src": "1909:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:7",
														"nodeType": "YulTypedName",
														"src": "1714:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:7",
														"nodeType": "YulTypedName",
														"src": "1723:6:7",
														"type": ""
													}
												],
												"src": "1679:320:7"
											},
											{
												"body": {
													"nativeSrc": "2059:87:7",
													"nodeType": "YulBlock",
													"src": "2059:87:7",
													"statements": [
														{
															"nativeSrc": "2069:11:7",
															"nodeType": "YulAssignment",
															"src": "2069:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:7",
																"nodeType": "YulIdentifier",
																"src": "2077:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:7"
																},
																"nativeSrc": "2090:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:7"
															},
															"nativeSrc": "2090:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:7"
														},
														{
															"nativeSrc": "2113:26:7",
															"nodeType": "YulAssignment",
															"src": "2113:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:7"
																},
																"nativeSrc": "2121:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:7",
														"nodeType": "YulTypedName",
														"src": "2046:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:7",
														"nodeType": "YulTypedName",
														"src": "2054:4:7",
														"type": ""
													}
												],
												"src": "2005:141:7"
											},
											{
												"body": {
													"nativeSrc": "2196:49:7",
													"nodeType": "YulBlock",
													"src": "2196:49:7",
													"statements": [
														{
															"nativeSrc": "2206:33:7",
															"nodeType": "YulAssignment",
															"src": "2206:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:7"
																		},
																		"nativeSrc": "2220:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:7"
																},
																"nativeSrc": "2216:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:7",
														"nodeType": "YulTypedName",
														"src": "2179:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:7",
														"nodeType": "YulTypedName",
														"src": "2189:6:7",
														"type": ""
													}
												],
												"src": "2152:93:7"
											},
											{
												"body": {
													"nativeSrc": "2304:54:7",
													"nodeType": "YulBlock",
													"src": "2304:54:7",
													"statements": [
														{
															"nativeSrc": "2314:37:7",
															"nodeType": "YulAssignment",
															"src": "2314:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:7"
																},
																"nativeSrc": "2335:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:7",
														"nodeType": "YulTypedName",
														"src": "2279:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:7",
														"nodeType": "YulTypedName",
														"src": "2285:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:7",
														"nodeType": "YulTypedName",
														"src": "2295:8:7",
														"type": ""
													}
												],
												"src": "2251:107:7"
											},
											{
												"body": {
													"nativeSrc": "2440:317:7",
													"nodeType": "YulBlock",
													"src": "2440:317:7",
													"statements": [
														{
															"nativeSrc": "2450:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:7"
																},
																"nativeSrc": "2467:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:7"
																},
																"nativeSrc": "2506:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:7",
															"nodeType": "YulAssignment",
															"src": "2612:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:7"
																},
																"nativeSrc": "2624:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:7"
																}
															]
														},
														{
															"nativeSrc": "2672:30:7",
															"nodeType": "YulAssignment",
															"src": "2672:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:7"
																		},
																		"nativeSrc": "2692:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:7"
																},
																"nativeSrc": "2681:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:7"
																}
															]
														},
														{
															"nativeSrc": "2711:40:7",
															"nodeType": "YulAssignment",
															"src": "2711:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:7"
																		},
																		"nativeSrc": "2731:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:7"
																},
																"nativeSrc": "2721:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:7",
														"nodeType": "YulTypedName",
														"src": "2401:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:7",
														"nodeType": "YulTypedName",
														"src": "2408:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:7",
														"nodeType": "YulTypedName",
														"src": "2420:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:7",
														"nodeType": "YulTypedName",
														"src": "2433:6:7",
														"type": ""
													}
												],
												"src": "2364:393:7"
											},
											{
												"body": {
													"nativeSrc": "2808:32:7",
													"nodeType": "YulBlock",
													"src": "2808:32:7",
													"statements": [
														{
															"nativeSrc": "2818:16:7",
															"nodeType": "YulAssignment",
															"src": "2818:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:7",
																"nodeType": "YulIdentifier",
																"src": "2829:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:7",
														"nodeType": "YulTypedName",
														"src": "2790:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:7",
														"nodeType": "YulTypedName",
														"src": "2800:7:7",
														"type": ""
													}
												],
												"src": "2763:77:7"
											},
											{
												"body": {
													"nativeSrc": "2878:28:7",
													"nodeType": "YulBlock",
													"src": "2878:28:7",
													"statements": [
														{
															"nativeSrc": "2888:12:7",
															"nodeType": "YulAssignment",
															"src": "2888:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:7",
																"nodeType": "YulIdentifier",
																"src": "2895:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:7",
														"nodeType": "YulTypedName",
														"src": "2864:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:7",
														"nodeType": "YulTypedName",
														"src": "2874:3:7",
														"type": ""
													}
												],
												"src": "2846:60:7"
											},
											{
												"body": {
													"nativeSrc": "2972:82:7",
													"nodeType": "YulBlock",
													"src": "2972:82:7",
													"statements": [
														{
															"nativeSrc": "2982:66:7",
															"nodeType": "YulAssignment",
															"src": "2982:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:7"
																				},
																				"nativeSrc": "3022:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:7"
																		},
																		"nativeSrc": "3013:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:7"
																},
																"nativeSrc": "2995:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:7",
														"nodeType": "YulTypedName",
														"src": "2952:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:7",
														"nodeType": "YulTypedName",
														"src": "2962:9:7",
														"type": ""
													}
												],
												"src": "2912:142:7"
											},
											{
												"body": {
													"nativeSrc": "3107:28:7",
													"nodeType": "YulBlock",
													"src": "3107:28:7",
													"statements": [
														{
															"nativeSrc": "3117:12:7",
															"nodeType": "YulAssignment",
															"src": "3117:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:7",
																"nodeType": "YulIdentifier",
																"src": "3124:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:7",
														"nodeType": "YulTypedName",
														"src": "3093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:7",
														"nodeType": "YulTypedName",
														"src": "3103:3:7",
														"type": ""
													}
												],
												"src": "3060:75:7"
											},
											{
												"body": {
													"nativeSrc": "3217:193:7",
													"nodeType": "YulBlock",
													"src": "3217:193:7",
													"statements": [
														{
															"nativeSrc": "3227:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:7"
																},
																"nativeSrc": "3251:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:7"
																				},
																				"nativeSrc": "3340:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:7"
																				},
																				"nativeSrc": "3361:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:7"
																		},
																		"nativeSrc": "3312:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:7"
																},
																"nativeSrc": "3299:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:7"
															},
															"nativeSrc": "3299:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:7",
														"nodeType": "YulTypedName",
														"src": "3194:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:7",
														"nodeType": "YulTypedName",
														"src": "3200:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:7",
														"nodeType": "YulTypedName",
														"src": "3208:7:7",
														"type": ""
													}
												],
												"src": "3141:269:7"
											},
											{
												"body": {
													"nativeSrc": "3465:24:7",
													"nodeType": "YulBlock",
													"src": "3465:24:7",
													"statements": [
														{
															"nativeSrc": "3475:8:7",
															"nodeType": "YulAssignment",
															"src": "3475:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:7",
																"nodeType": "YulLiteral",
																"src": "3482:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:7",
														"nodeType": "YulTypedName",
														"src": "3461:3:7",
														"type": ""
													}
												],
												"src": "3416:73:7"
											},
											{
												"body": {
													"nativeSrc": "3548:136:7",
													"nodeType": "YulBlock",
													"src": "3548:136:7",
													"statements": [
														{
															"nativeSrc": "3558:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:7"
																},
																"nativeSrc": "3572:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:7",
														"nodeType": "YulTypedName",
														"src": "3534:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:7",
														"nodeType": "YulTypedName",
														"src": "3540:6:7",
														"type": ""
													}
												],
												"src": "3495:189:7"
											},
											{
												"body": {
													"nativeSrc": "3740:136:7",
													"nodeType": "YulBlock",
													"src": "3740:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:7",
																"nodeType": "YulBlock",
																"src": "3807:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:7"
																			},
																			"nativeSrc": "3821:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:7"
																		},
																		"nativeSrc": "3821:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:7"
																},
																"nativeSrc": "3757:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:7"
															},
															"nativeSrc": "3750:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:7",
																"nodeType": "YulBlock",
																"src": "3772:26:7",
																"statements": [
																	{
																		"nativeSrc": "3774:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:7"
																			},
																			"nativeSrc": "3783:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:7",
																"nodeType": "YulBlock",
																"src": "3754:2:7",
																"statements": []
															},
															"src": "3750:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:7",
														"nodeType": "YulTypedName",
														"src": "3728:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:7",
														"nodeType": "YulTypedName",
														"src": "3735:3:7",
														"type": ""
													}
												],
												"src": "3690:186:7"
											},
											{
												"body": {
													"nativeSrc": "3961:464:7",
													"nodeType": "YulBlock",
													"src": "3961:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:7",
																"nodeType": "YulBlock",
																"src": "3987:431:7",
																"statements": [
																	{
																		"nativeSrc": "4001:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:7"
																			},
																			"nativeSrc": "4017:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:7"
																					},
																					"nativeSrc": "4101:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:7"
																			},
																			"nativeSrc": "4087:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:7",
																			"nodeType": "YulBlock",
																			"src": "4288:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:7"
																			},
																			"nativeSrc": "4269:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:7"
																		},
																		"nativeSrc": "4266:49:7",
																		"nodeType": "YulIf",
																		"src": "4266:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:7"
																							},
																							"nativeSrc": "4384:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:7"
																					},
																					"nativeSrc": "4370:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:7"
																			},
																			"nativeSrc": "4328:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:7"
																		},
																		"nativeSrc": "4328:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:7"
																},
																"nativeSrc": "3975:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:7"
															},
															"nativeSrc": "3972:446:7",
															"nodeType": "YulIf",
															"src": "3972:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:7",
														"nodeType": "YulTypedName",
														"src": "3937:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:7",
														"nodeType": "YulTypedName",
														"src": "3944:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:7",
														"nodeType": "YulTypedName",
														"src": "3949:10:7",
														"type": ""
													}
												],
												"src": "3882:543:7"
											},
											{
												"body": {
													"nativeSrc": "4494:54:7",
													"nodeType": "YulBlock",
													"src": "4494:54:7",
													"statements": [
														{
															"nativeSrc": "4504:37:7",
															"nodeType": "YulAssignment",
															"src": "4504:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:7"
																},
																"nativeSrc": "4525:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:7",
														"nodeType": "YulTypedName",
														"src": "4469:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:7",
														"nodeType": "YulTypedName",
														"src": "4475:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:7",
														"nodeType": "YulTypedName",
														"src": "4485:8:7",
														"type": ""
													}
												],
												"src": "4431:117:7"
											},
											{
												"body": {
													"nativeSrc": "4605:118:7",
													"nodeType": "YulBlock",
													"src": "4605:118:7",
													"statements": [
														{
															"nativeSrc": "4615:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:7"
																				},
																				"nativeSrc": "4660:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:7"
																				},
																				"nativeSrc": "4675:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:7"
																		},
																		"nativeSrc": "4631:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:7"
																},
																"nativeSrc": "4627:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:7",
															"nodeType": "YulAssignment",
															"src": "4692:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:7"
																},
																"nativeSrc": "4702:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:7",
														"nodeType": "YulTypedName",
														"src": "4582:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:7",
														"nodeType": "YulTypedName",
														"src": "4588:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:7",
														"nodeType": "YulTypedName",
														"src": "4598:6:7",
														"type": ""
													}
												],
												"src": "4554:169:7"
											},
											{
												"body": {
													"nativeSrc": "4809:214:7",
													"nodeType": "YulBlock",
													"src": "4809:214:7",
													"statements": [
														{
															"nativeSrc": "4942:37:7",
															"nodeType": "YulAssignment",
															"src": "4942:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:7"
																},
																"nativeSrc": "4950:29:7",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:7"
																}
															]
														},
														{
															"nativeSrc": "4988:29:7",
															"nodeType": "YulAssignment",
															"src": "4988:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:7"
																		},
																		"nativeSrc": "5005:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:7"
																},
																"nativeSrc": "4996:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:7",
														"nodeType": "YulTypedName",
														"src": "4790:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:7",
														"nodeType": "YulTypedName",
														"src": "4796:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:7",
														"nodeType": "YulTypedName",
														"src": "4804:4:7",
														"type": ""
													}
												],
												"src": "4728:295:7"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:7",
													"nodeType": "YulBlock",
													"src": "5120:1303:7",
													"statements": [
														{
															"nativeSrc": "5131:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:7"
																},
																"nativeSrc": "5145:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:7",
																"nodeType": "YulBlock",
																"src": "5267:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:7"
																			},
																			"nativeSrc": "5269:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:7"
																		},
																		"nativeSrc": "5269:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:7"
																},
																"nativeSrc": "5236:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:7"
															},
															"nativeSrc": "5233:56:7",
															"nodeType": "YulIf",
															"src": "5233:56:7"
														},
														{
															"nativeSrc": "5299:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:7"
																		},
																		"nativeSrc": "5339:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:7"
																},
																"nativeSrc": "5313:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:7"
																},
																"nativeSrc": "5398:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:7"
															},
															"nativeSrc": "5398:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:7"
														},
														{
															"nativeSrc": "5475:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:7",
																"nodeType": "YulLiteral",
																"src": "5492:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:7",
															"nodeType": "YulAssignment",
															"src": "5503:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:7",
																"nodeType": "YulLiteral",
																"src": "5516:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:7",
																		"nodeType": "YulBlock",
																		"src": "5567:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:7"
																							},
																							"nativeSrc": "5608:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:7"
																					},
																					"nativeSrc": "5596:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:7"
																					},
																					"nativeSrc": "5646:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:7",
																					"nodeType": "YulBlock",
																					"src": "5764:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:7"
																												},
																												"nativeSrc": "5803:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:7"
																										},
																										"nativeSrc": "5797:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:7"
																								},
																								"nativeSrc": "5782:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:7"
																							},
																							"nativeSrc": "5782:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:7"
																						},
																						{
																							"nativeSrc": "5841:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:7",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:7"
																								},
																								"nativeSrc": "5851:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:7",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:7",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:7"
																								},
																								"nativeSrc": "5895:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:7"
																					},
																					"nativeSrc": "5727:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:7"
																				},
																				"nativeSrc": "5719:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:7",
																					"nodeType": "YulBlock",
																					"src": "5742:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:7"
																								},
																								"nativeSrc": "5749:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:7",
																					"nodeType": "YulBlock",
																					"src": "5723:3:7",
																					"statements": []
																				},
																				"src": "5719:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:7",
																					"nodeType": "YulBlock",
																					"src": "5963:156:7",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:7"
																										},
																										"nativeSrc": "6004:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:7"
																								},
																								"nativeSrc": "5998:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:7",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:7"
																												},
																												"nativeSrc": "6086:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:7"
																										},
																										"nativeSrc": "6056:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:7"
																								},
																								"nativeSrc": "6041:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:7"
																							},
																							"nativeSrc": "6041:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:7"
																					},
																					"nativeSrc": "5943:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:7"
																				},
																				"nativeSrc": "5940:179:7",
																				"nodeType": "YulIf",
																				"src": "5940:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:7"
																									},
																									"nativeSrc": "6149:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:7"
																							},
																							"nativeSrc": "6145:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:7"
																					},
																					"nativeSrc": "6132:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:7"
																				},
																				"nativeSrc": "6132:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:7",
																	"nodeType": "YulCase",
																	"src": "5560:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:7",
																		"nodeType": "YulBlock",
																		"src": "6195:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:7",
																					"nodeType": "YulBlock",
																					"src": "6246:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:7"
																										},
																										"nativeSrc": "6279:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:7"
																								},
																								"nativeSrc": "6273:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:7"
																				},
																				"nativeSrc": "6236:77:7",
																				"nodeType": "YulIf",
																				"src": "6236:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:7"
																							},
																							"nativeSrc": "6339:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:7"
																					},
																					"nativeSrc": "6326:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:7"
																				},
																				"nativeSrc": "6326:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:7",
																	"nodeType": "YulCase",
																	"src": "6187:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:7"
																},
																"nativeSrc": "5537:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:7"
															},
															"nativeSrc": "5530:887:7",
															"nodeType": "YulSwitch",
															"src": "5530:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:7",
														"nodeType": "YulTypedName",
														"src": "5109:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:7",
														"nodeType": "YulTypedName",
														"src": "5115:3:7",
														"type": ""
													}
												],
												"src": "5028:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6494:53:7",
													"nodeType": "YulBlock",
													"src": "6494:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:7"
																		},
																		"nativeSrc": "6516:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:7"
																},
																"nativeSrc": "6504:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:7"
															},
															"nativeSrc": "6504:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:7",
														"nodeType": "YulTypedName",
														"src": "6482:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:7",
														"nodeType": "YulTypedName",
														"src": "6489:3:7",
														"type": ""
													}
												],
												"src": "6429:118:7"
											},
											{
												"body": {
													"nativeSrc": "6651:124:7",
													"nodeType": "YulBlock",
													"src": "6651:124:7",
													"statements": [
														{
															"nativeSrc": "6661:26:7",
															"nodeType": "YulAssignment",
															"src": "6661:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:7"
																},
																"nativeSrc": "6669:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:7"
																		},
																		"nativeSrc": "6750:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:7"
																},
																"nativeSrc": "6697:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:7"
															},
															"nativeSrc": "6697:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:7",
														"nodeType": "YulTypedName",
														"src": "6623:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:7",
														"nodeType": "YulTypedName",
														"src": "6635:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:7",
														"nodeType": "YulTypedName",
														"src": "6646:4:7",
														"type": ""
													}
												],
												"src": "6553:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516116e03803806116e083398181016040528101906100319190610267565b806040518060400160405280600f81526020017f4c61626b613654657374546f6b656e00000000000000000000000000000000008152506040518060400160405280600581526020017f4c4142365400000000000000000000000000000000000000000000000000000081525081600390816100ad91906104cc565b5080600490816100bd91906104cc565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906105aa565b60405180910390fd5b61013f8161014660201b60201c565b50506105c3565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102368261020d565b9050919050565b6102468161022c565b8114610250575f80fd5b50565b5f815190506102618161023d565b92915050565b5f6020828403121561027c5761027b610209565b5b5f61028984828501610253565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061030d57607f821691505b6020821081036103205761031f6102c9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610347565b61038c8683610347565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103d06103cb6103c6846103a4565b6103ad565b6103a4565b9050919050565b5f819050919050565b6103e9836103b6565b6103fd6103f5826103d7565b848454610353565b825550505050565b5f90565b610411610405565b61041c8184846103e0565b505050565b5b8181101561043f576104345f82610409565b600181019050610422565b5050565b601f8211156104845761045581610326565b61045e84610338565b8101602085101561046d578190505b61048161047985610338565b830182610421565b50505b505050565b5f82821c905092915050565b5f6104a45f1984600802610489565b1980831691505092915050565b5f6104bc8383610495565b9150826002028217905092915050565b6104d582610292565b67ffffffffffffffff8111156104ee576104ed61029c565b5b6104f882546102f6565b610503828285610443565b5f60209050601f831160018114610534575f8415610522578287015190505b61052c85826104b1565b865550610593565b601f19841661054286610326565b5f5b8281101561056957848901518255600182019150602085019450602081019050610544565b868310156105865784890151610582601f891682610495565b8355505b6001600288020188555050505b505050505050565b6105a48161022c565b82525050565b5f6020820190506105bd5f83018461059b565b92915050565b611110806105d05f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063715018a61161008a57806395d89b411161006457806395d89b41146101ed578063a9059cbb1461020b578063dd62ed3e1461023b578063f2fde38b1461026b576100cd565b8063715018a6146101bb57806388f6e28d146101c55780638da5cb5b146101cf576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d57806370a082311461018b575b5f80fd5b6100d9610287565b6040516100e69190610d89565b60405180910390f35b61010960048036038101906101049190610e3a565b610317565b6040516101169190610e92565b60405180910390f35b610127610339565b6040516101349190610eba565b60405180910390f35b61015760048036038101906101529190610ed3565b610342565b6040516101649190610e92565b60405180910390f35b610175610370565b6040516101829190610f3e565b60405180910390f35b6101a560048036038101906101a09190610f57565b610378565b6040516101b29190610eba565b60405180910390f35b6101c36103bd565b005b6101cd6103d0565b005b6101d76103ed565b6040516101e49190610f91565b60405180910390f35b6101f5610415565b6040516102029190610d89565b60405180910390f35b61022560048036038101906102209190610e3a565b6104a5565b6040516102329190610e92565b60405180910390f35b61025560048036038101906102509190610faa565b6104c7565b6040516102629190610eba565b60405180910390f35b61028560048036038101906102809190610f57565b610549565b005b60606003805461029690611015565b80601f01602080910402602001604051908101604052809291908181526020018280546102c290611015565b801561030d5780601f106102e45761010080835404028352916020019161030d565b820191905f5260205f20905b8154815290600101906020018083116102f057829003601f168201915b5050505050905090565b5f806103216105cd565b905061032e8185856105d4565b600191505092915050565b5f600254905090565b5f8061034c6105cd565b90506103598582856105e6565b610364858585610678565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103c5610768565b6103ce5f6107ef565b565b6103d8610768565b6103eb336802b5e3af16b18800006108b2565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461042490611015565b80601f016020809104026020016040519081016040528092919081815260200182805461045090611015565b801561049b5780601f106104725761010080835404028352916020019161049b565b820191905f5260205f20905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b5f806104af6105cd565b90506104bc818585610678565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610551610768565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105b89190610f91565b60405180910390fd5b6105ca816107ef565b50565b5f33905090565b6105e18383836001610931565b505050565b5f6105f184846104c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106725781811015610663578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161065a93929190611045565b60405180910390fd5b61067184848484035f610931565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106df9190610f91565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610758575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161074f9190610f91565b60405180910390fd5b610763838383610b00565b505050565b6107706105cd565b73ffffffffffffffffffffffffffffffffffffffff1661078e6103ed565b73ffffffffffffffffffffffffffffffffffffffff16146107ed576107b16105cd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107e49190610f91565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610922575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109199190610f91565b60405180910390fd5b61092d5f8383610b00565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109a1575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109989190610f91565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a11575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a089190610f91565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610afa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610af19190610eba565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b50578060025f828254610b4491906110a7565b92505081905550610c1e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610bd9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610bd093929190611045565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c65578060025f8282540392505081905550610caf565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d0c9190610eba565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d5b82610d19565b610d658185610d23565b9350610d75818560208601610d33565b610d7e81610d41565b840191505092915050565b5f6020820190508181035f830152610da18184610d51565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dd682610dad565b9050919050565b610de681610dcc565b8114610df0575f80fd5b50565b5f81359050610e0181610ddd565b92915050565b5f819050919050565b610e1981610e07565b8114610e23575f80fd5b50565b5f81359050610e3481610e10565b92915050565b5f8060408385031215610e5057610e4f610da9565b5b5f610e5d85828601610df3565b9250506020610e6e85828601610e26565b9150509250929050565b5f8115159050919050565b610e8c81610e78565b82525050565b5f602082019050610ea55f830184610e83565b92915050565b610eb481610e07565b82525050565b5f602082019050610ecd5f830184610eab565b92915050565b5f805f60608486031215610eea57610ee9610da9565b5b5f610ef786828701610df3565b9350506020610f0886828701610df3565b9250506040610f1986828701610e26565b9150509250925092565b5f60ff82169050919050565b610f3881610f23565b82525050565b5f602082019050610f515f830184610f2f565b92915050565b5f60208284031215610f6c57610f6b610da9565b5b5f610f7984828501610df3565b91505092915050565b610f8b81610dcc565b82525050565b5f602082019050610fa45f830184610f82565b92915050565b5f8060408385031215610fc057610fbf610da9565b5b5f610fcd85828601610df3565b9250506020610fde85828601610df3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061102c57607f821691505b60208210810361103f5761103e610fe8565b5b50919050565b5f6060820190506110585f830186610f82565b6110656020830185610eab565b6110726040830184610eab565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110b182610e07565b91506110bc83610e07565b92508282019050808211156110d4576110d361107a565b5b9291505056fea26469706673582212206c583de3e2c78e46649e27d95ab5c83811724a683f9dd791bb46f4521cfdf7e664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16E0 CODESIZE SUB DUP1 PUSH2 0x16E0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C61626B613654657374546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C41423654000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x146 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x236 DUP3 PUSH2 0x20D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x246 DUP2 PUSH2 0x22C JUMP JUMPDEST DUP2 EQ PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x23D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x209 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x289 DUP5 DUP3 DUP6 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x30D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x382 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x38C DUP7 DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3D0 PUSH2 0x3CB PUSH2 0x3C6 DUP5 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E9 DUP4 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x3F5 DUP3 PUSH2 0x3D7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x353 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x41C DUP2 DUP5 DUP5 PUSH2 0x3E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH2 0x434 PUSH0 DUP3 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x422 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x455 DUP2 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x45E DUP5 PUSH2 0x338 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x481 PUSH2 0x479 DUP6 PUSH2 0x338 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x421 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x489 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D5 DUP3 PUSH2 0x292 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0x29C JUMP JUMPDEST JUMPDEST PUSH2 0x4F8 DUP3 SLOAD PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x503 DUP3 DUP3 DUP6 PUSH2 0x443 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x534 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x522 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x52C DUP6 DUP3 PUSH2 0x4B1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x542 DUP7 PUSH2 0x326 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x569 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x544 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x586 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x582 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x495 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A4 DUP2 PUSH2 0x22C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BD PUSH0 DUP4 ADD DUP5 PUSH2 0x59B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1110 DUP1 PUSH2 0x5D0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26B JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x88F6E28D EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CF JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x296 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x321 PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH2 0x32E DUP2 DUP6 DUP6 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x34C PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH2 0x359 DUP6 DUP3 DUP6 PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0x364 DUP6 DUP6 DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x3CE PUSH0 PUSH2 0x7EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x3EB CALLER PUSH9 0x2B5E3AF16B1880000 PUSH2 0x8B2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4AF PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH2 0x4BC DUP2 DUP6 DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x551 PUSH2 0x768 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x7EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x931 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F1 DUP5 DUP5 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x672 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x663 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x671 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x931 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x758 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x763 DUP4 DUP4 DUP4 PUSH2 0xB00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x770 PUSH2 0x5CD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78E PUSH2 0x3ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7ED JUMPI PUSH2 0x7B1 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x922 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x92D PUSH0 DUP4 DUP4 PUSH2 0xB00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xAFA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB50 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC1E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBD9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC65 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCAF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5B DUP3 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xD65 DUP2 DUP6 PUSH2 0xD23 JUMP JUMPDEST SWAP4 POP PUSH2 0xD75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xD41 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA1 DUP2 DUP5 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD6 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xDCC JUMP JUMPDEST DUP2 EQ PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE01 DUP2 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE19 DUP2 PUSH2 0xE07 JUMP JUMPDEST DUP2 EQ PUSH2 0xE23 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE34 DUP2 PUSH2 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE5D DUP6 DUP3 DUP7 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE6E DUP6 DUP3 DUP7 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8C DUP2 PUSH2 0xE78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xE83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEB4 DUP2 PUSH2 0xE07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECD PUSH0 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEEA JUMPI PUSH2 0xEE9 PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF7 DUP7 DUP3 DUP8 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF08 DUP7 DUP3 DUP8 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF19 DUP7 DUP3 DUP8 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF38 DUP2 PUSH2 0xF23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF51 PUSH0 DUP4 ADD DUP5 PUSH2 0xF2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6C JUMPI PUSH2 0xF6B PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF79 DUP5 DUP3 DUP6 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xDCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFCD DUP6 DUP3 DUP7 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFDE DUP6 DUP3 DUP7 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x102C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xFE8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1058 PUSH0 DUP4 ADD DUP7 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x1065 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x1072 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10B1 DUP3 PUSH2 0xE07 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BC DUP4 PUSH2 0xE07 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0x107A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x583DE3E2C78E46649E27D95AB5 0xC8 CODESIZE GT PUSH19 0x4A683F9DD791BB46F4521CFDF7E664736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "247:234:0:-:0;;;325:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;367:12;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;325:58:0;247:234;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;247:234:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_726": {
									"entryPoint": 1492,
									"id": 726,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_786": {
									"entryPoint": 2353,
									"id": 786,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_120": {
									"entryPoint": 1896,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_675": {
									"entryPoint": 2226,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_951": {
									"entryPoint": 1485,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_834": {
									"entryPoint": 1510,
									"id": 834,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_182": {
									"entryPoint": 2031,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_565": {
									"entryPoint": 1656,
									"id": 565,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_642": {
									"entryPoint": 2816,
									"id": 642,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_462": {
									"entryPoint": 1223,
									"id": 462,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_486": {
									"entryPoint": 791,
									"id": 486,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_421": {
									"entryPoint": 888,
									"id": 421,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_399": {
									"entryPoint": 880,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintFifty_34": {
									"entryPoint": 976,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_381": {
									"entryPoint": 647,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_103": {
									"entryPoint": 1005,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_134": {
									"entryPoint": 957,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_390": {
									"entryPoint": 1045,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_408": {
									"entryPoint": 825,
									"id": 408,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_518": {
									"entryPoint": 834,
									"id": 518,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_162": {
									"entryPoint": 1353,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_445": {
									"entryPoint": 1189,
									"id": 445,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7253:7",
										"nodeType": "YulBlock",
										"src": "0:7253:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6579:288:7",
													"nodeType": "YulBlock",
													"src": "6579:288:7",
													"statements": [
														{
															"nativeSrc": "6589:26:7",
															"nodeType": "YulAssignment",
															"src": "6589:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6612:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6612:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6597:3:7"
																},
																"nativeSrc": "6597:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6597:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6589:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6669:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6669:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6682:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6693:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6693:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6678:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:7"
																		},
																		"nativeSrc": "6678:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6625:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6625:43:7"
																},
																"nativeSrc": "6625:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6625:71:7"
															},
															"nativeSrc": "6625:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6625:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6750:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6750:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6763:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6763:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6774:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6774:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6759:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:7"
																		},
																		"nativeSrc": "6759:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6759:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6706:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6706:43:7"
																},
																"nativeSrc": "6706:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6706:72:7"
															},
															"nativeSrc": "6706:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6706:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6832:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6832:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6845:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6856:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6841:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:7"
																		},
																		"nativeSrc": "6841:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6841:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6788:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6788:43:7"
																},
																"nativeSrc": "6788:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6788:72:7"
															},
															"nativeSrc": "6788:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6788:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6425:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6535:9:7",
														"nodeType": "YulTypedName",
														"src": "6535:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6547:6:7",
														"nodeType": "YulTypedName",
														"src": "6547:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6555:6:7",
														"nodeType": "YulTypedName",
														"src": "6555:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6563:6:7",
														"nodeType": "YulTypedName",
														"src": "6563:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6574:4:7",
														"nodeType": "YulTypedName",
														"src": "6574:4:7",
														"type": ""
													}
												],
												"src": "6425:442:7"
											},
											{
												"body": {
													"nativeSrc": "6901:152:7",
													"nodeType": "YulBlock",
													"src": "6901:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6918:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6921:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:7"
																},
																"nativeSrc": "6911:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6911:88:7"
															},
															"nativeSrc": "6911:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6911:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7015:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:7"
																},
																"nativeSrc": "7008:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7008:15:7"
															},
															"nativeSrc": "7008:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7042:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:7"
																},
																"nativeSrc": "7032:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7032:15:7"
															},
															"nativeSrc": "7032:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7032:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6873:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6873:180:7"
											},
											{
												"body": {
													"nativeSrc": "7103:147:7",
													"nodeType": "YulBlock",
													"src": "7103:147:7",
													"statements": [
														{
															"nativeSrc": "7113:25:7",
															"nodeType": "YulAssignment",
															"src": "7113:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7136:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7136:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7118:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7118:17:7"
																},
																"nativeSrc": "7118:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7118:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7113:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7113:1:7"
																}
															]
														},
														{
															"nativeSrc": "7147:25:7",
															"nodeType": "YulAssignment",
															"src": "7147:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7170:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7152:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7152:17:7"
																},
																"nativeSrc": "7152:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7152:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7147:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7147:1:7"
																}
															]
														},
														{
															"nativeSrc": "7181:16:7",
															"nodeType": "YulAssignment",
															"src": "7181:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7192:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7192:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7195:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7195:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:7"
																},
																"nativeSrc": "7188:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7188:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7221:22:7",
																"nodeType": "YulBlock",
																"src": "7221:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7223:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7223:16:7"
																			},
																			"nativeSrc": "7223:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7223:18:7"
																		},
																		"nativeSrc": "7223:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7223:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7213:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7213:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7216:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7216:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7210:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7210:2:7"
																},
																"nativeSrc": "7210:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7210:10:7"
															},
															"nativeSrc": "7207:36:7",
															"nodeType": "YulIf",
															"src": "7207:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7059:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7090:1:7",
														"nodeType": "YulTypedName",
														"src": "7090:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7093:1:7",
														"nodeType": "YulTypedName",
														"src": "7093:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7099:3:7",
														"nodeType": "YulTypedName",
														"src": "7099:3:7",
														"type": ""
													}
												],
												"src": "7059:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063715018a61161008a57806395d89b411161006457806395d89b41146101ed578063a9059cbb1461020b578063dd62ed3e1461023b578063f2fde38b1461026b576100cd565b8063715018a6146101bb57806388f6e28d146101c55780638da5cb5b146101cf576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d57806370a082311461018b575b5f80fd5b6100d9610287565b6040516100e69190610d89565b60405180910390f35b61010960048036038101906101049190610e3a565b610317565b6040516101169190610e92565b60405180910390f35b610127610339565b6040516101349190610eba565b60405180910390f35b61015760048036038101906101529190610ed3565b610342565b6040516101649190610e92565b60405180910390f35b610175610370565b6040516101829190610f3e565b60405180910390f35b6101a560048036038101906101a09190610f57565b610378565b6040516101b29190610eba565b60405180910390f35b6101c36103bd565b005b6101cd6103d0565b005b6101d76103ed565b6040516101e49190610f91565b60405180910390f35b6101f5610415565b6040516102029190610d89565b60405180910390f35b61022560048036038101906102209190610e3a565b6104a5565b6040516102329190610e92565b60405180910390f35b61025560048036038101906102509190610faa565b6104c7565b6040516102629190610eba565b60405180910390f35b61028560048036038101906102809190610f57565b610549565b005b60606003805461029690611015565b80601f01602080910402602001604051908101604052809291908181526020018280546102c290611015565b801561030d5780601f106102e45761010080835404028352916020019161030d565b820191905f5260205f20905b8154815290600101906020018083116102f057829003601f168201915b5050505050905090565b5f806103216105cd565b905061032e8185856105d4565b600191505092915050565b5f600254905090565b5f8061034c6105cd565b90506103598582856105e6565b610364858585610678565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103c5610768565b6103ce5f6107ef565b565b6103d8610768565b6103eb336802b5e3af16b18800006108b2565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461042490611015565b80601f016020809104026020016040519081016040528092919081815260200182805461045090611015565b801561049b5780601f106104725761010080835404028352916020019161049b565b820191905f5260205f20905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b5f806104af6105cd565b90506104bc818585610678565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610551610768565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105b89190610f91565b60405180910390fd5b6105ca816107ef565b50565b5f33905090565b6105e18383836001610931565b505050565b5f6105f184846104c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106725781811015610663578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161065a93929190611045565b60405180910390fd5b61067184848484035f610931565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106df9190610f91565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610758575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161074f9190610f91565b60405180910390fd5b610763838383610b00565b505050565b6107706105cd565b73ffffffffffffffffffffffffffffffffffffffff1661078e6103ed565b73ffffffffffffffffffffffffffffffffffffffff16146107ed576107b16105cd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107e49190610f91565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610922575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109199190610f91565b60405180910390fd5b61092d5f8383610b00565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109a1575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109989190610f91565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a11575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a089190610f91565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610afa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610af19190610eba565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b50578060025f828254610b4491906110a7565b92505081905550610c1e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610bd9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610bd093929190611045565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c65578060025f8282540392505081905550610caf565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d0c9190610eba565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d5b82610d19565b610d658185610d23565b9350610d75818560208601610d33565b610d7e81610d41565b840191505092915050565b5f6020820190508181035f830152610da18184610d51565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dd682610dad565b9050919050565b610de681610dcc565b8114610df0575f80fd5b50565b5f81359050610e0181610ddd565b92915050565b5f819050919050565b610e1981610e07565b8114610e23575f80fd5b50565b5f81359050610e3481610e10565b92915050565b5f8060408385031215610e5057610e4f610da9565b5b5f610e5d85828601610df3565b9250506020610e6e85828601610e26565b9150509250929050565b5f8115159050919050565b610e8c81610e78565b82525050565b5f602082019050610ea55f830184610e83565b92915050565b610eb481610e07565b82525050565b5f602082019050610ecd5f830184610eab565b92915050565b5f805f60608486031215610eea57610ee9610da9565b5b5f610ef786828701610df3565b9350506020610f0886828701610df3565b9250506040610f1986828701610e26565b9150509250925092565b5f60ff82169050919050565b610f3881610f23565b82525050565b5f602082019050610f515f830184610f2f565b92915050565b5f60208284031215610f6c57610f6b610da9565b5b5f610f7984828501610df3565b91505092915050565b610f8b81610dcc565b82525050565b5f602082019050610fa45f830184610f82565b92915050565b5f8060408385031215610fc057610fbf610da9565b5b5f610fcd85828601610df3565b9250506020610fde85828601610df3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061102c57607f821691505b60208210810361103f5761103e610fe8565b5b50919050565b5f6060820190506110585f830186610f82565b6110656020830185610eab565b6110726040830184610eab565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110b182610e07565b91506110bc83610e07565b92508282019050808211156110d4576110d361107a565b5b9291505056fea26469706673582212206c583de3e2c78e46649e27d95ab5c83811724a683f9dd791bb46f4521cfdf7e664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26B JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x88F6E28D EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CF JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x296 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x321 PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH2 0x32E DUP2 DUP6 DUP6 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x34C PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH2 0x359 DUP6 DUP3 DUP6 PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0x364 DUP6 DUP6 DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x3CE PUSH0 PUSH2 0x7EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x3EB CALLER PUSH9 0x2B5E3AF16B1880000 PUSH2 0x8B2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1015 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4AF PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH2 0x4BC DUP2 DUP6 DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x551 PUSH2 0x768 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x7EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x931 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F1 DUP5 DUP5 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x672 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x663 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x671 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x931 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x758 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x763 DUP4 DUP4 DUP4 PUSH2 0xB00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x770 PUSH2 0x5CD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78E PUSH2 0x3ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7ED JUMPI PUSH2 0x7B1 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x922 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x92D PUSH0 DUP4 DUP4 PUSH2 0xB00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xAFA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB50 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC1E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBD9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC65 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCAF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5B DUP3 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xD65 DUP2 DUP6 PUSH2 0xD23 JUMP JUMPDEST SWAP4 POP PUSH2 0xD75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xD41 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA1 DUP2 DUP5 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD6 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xDCC JUMP JUMPDEST DUP2 EQ PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE01 DUP2 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE19 DUP2 PUSH2 0xE07 JUMP JUMPDEST DUP2 EQ PUSH2 0xE23 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE34 DUP2 PUSH2 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE5D DUP6 DUP3 DUP7 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE6E DUP6 DUP3 DUP7 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8C DUP2 PUSH2 0xE78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xE83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEB4 DUP2 PUSH2 0xE07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECD PUSH0 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEEA JUMPI PUSH2 0xEE9 PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF7 DUP7 DUP3 DUP8 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF08 DUP7 DUP3 DUP8 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF19 DUP7 DUP3 DUP8 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF38 DUP2 PUSH2 0xF23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF51 PUSH0 DUP4 ADD DUP5 PUSH2 0xF2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6C JUMPI PUSH2 0xF6B PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF79 DUP5 DUP3 DUP6 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xDCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFCD DUP6 DUP3 DUP7 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFDE DUP6 DUP3 DUP7 ADD PUSH2 0xDF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x102C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x103F JUMPI PUSH2 0x103E PUSH2 0xFE8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1058 PUSH0 DUP4 ADD DUP7 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x1065 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x1072 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10B1 DUP3 PUSH2 0xE07 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BC DUP4 PUSH2 0xE07 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0x107A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x583DE3E2C78E46649E27D95AB5 0xC8 CODESIZE GT PUSH19 0x4A683F9DD791BB46F4521CFDF7E664736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "247:234:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;391:87:0;;;:::i;:::-;;1638:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;391:87:0:-;1531:13:1;:11;:13::i;:::-;440:30:0::1;446:10;458:11;440:5;:30::i;:::-;391:87::o:0;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:442::-;6574:4;6612:2;6601:9;6597:18;6589:26;;6625:71;6693:1;6682:9;6678:17;6669:6;6625:71;:::i;:::-;6706:72;6774:2;6763:9;6759:18;6750:6;6706:72;:::i;:::-;6788;6856:2;6845:9;6841:18;6832:6;6788:72;:::i;:::-;6425:442;;;;;;:::o;6873:180::-;6921:77;6918:1;6911:88;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15;7059:191;7099:3;7118:20;7136:1;7118:20;:::i;:::-;7113:25;;7152:20;7170:1;7152:20;:::i;:::-;7147:25;;7195:1;7192;7188:9;7181:16;;7216:3;7213:1;7210:10;7207:36;;;7223:18;;:::i;:::-;7207:36;7059:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "873600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"decimals()": "427",
								"mintFifty()": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 247,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 383,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 325,
									"end": 383,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 325,
									"end": 383,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 367,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "F"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4C61626B613654657374546F6B656E0000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4C41423654000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 325,
									"end": 383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 247,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 247,
									"end": 481,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 247,
									"end": 481,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 247,
									"end": 481,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 247,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 481,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c583de3e2c78e46649e27d95ab5c83811724a683f9dd791bb46f4521cfdf7e664736f6c63430008190033",
									".code": [
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "88F6E28D"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 391,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 391,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 391,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 391,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 478,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 391,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 440,
											"end": 470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 446,
											"end": 456,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 458,
											"end": 469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 440,
											"end": 445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 440,
											"end": 470,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 440,
											"end": 470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 6578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6625,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6756,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 6706,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6838,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 6788,
											"end": 6860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 6998,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7118,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7152,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7219,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7220,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 7223,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/token.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mintFifty()": "88f6e28d",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintFifty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token.sol\":\"Lab6token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token.sol\":{\"keccak256\":\"0x5fcdd03db3f2143ba8b48ee02e90ee85404f6b4ce6c862a7935dfe256df1caf8\",\"urls\":[\"bzz-raw://13425ede801a08466a16874313c4d1a478e1e2607238d41252664d98c7386a88\",\"dweb:/ipfs/QmczLkGbb5w6MNyW37e4uTQRzPeupy53XDYwxqWkyLYo4f\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 343,
								"contract": "contracts/token.sol:Lab6token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 349,
								"contract": "contracts/token.sol:Lab6token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 351,
								"contract": "contracts/token.sol:Lab6token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 353,
								"contract": "contracts/token.sol:Lab6token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "contracts/token.sol:Lab6token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 44,
								"contract": "contracts/token.sol:Lab6token",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 44,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 343,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 349,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 351,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 353,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/token.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/token.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/token.sol": {
				"ast": {
					"absolutePath": "contracts/token.sol",
					"exportedSymbols": {
						"Context": [
							969
						],
						"ERC20": [
							835
						],
						"IERC20": [
							913
						],
						"IERC20Errors": [
							225
						],
						"IERC20Metadata": [
							939
						],
						"Lab6token": [
							35
						],
						"Ownable": [
							183
						]
					},
					"id": 36,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 36,
							"sourceUnit": 836,
							"src": "28:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 36,
							"sourceUnit": 184,
							"src": "138:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "4c61626b613654657374546f6b656e",
											"id": 5,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "275:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_71d084ec28ddddb8dbe3e75bf46e98441f365bf8601fb3569e888cd662b49247",
												"typeString": "literal_string \"Labka6TestToken\""
											},
											"value": "Labka6TestToken"
										},
										{
											"hexValue": "4c41423654",
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "294:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_65724149af907b97ae05d62ffd0252bd5574fb02f9fcb2c0156a67a6af660f8e",
												"typeString": "literal_string \"LAB6T\""
											},
											"value": "LAB6T"
										}
									],
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nameLocations": [
											"269:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 835,
										"src": "269:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "269:33:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "Ownable",
										"nameLocations": [
											"304:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 183,
										"src": "304:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "304:7:0"
								}
							],
							"canonicalName": "Lab6token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35,
								183,
								835,
								225,
								939,
								913,
								969
							],
							"name": "Lab6token",
							"nameLocation": "256:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "381:2:0",
										"statements": []
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 14,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "367:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 15,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 13,
												"name": "Ownable",
												"nameLocations": [
													"359:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "359:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "359:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "345:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "337:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:22:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:0:0"
									},
									"scope": 35,
									"src": "325:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "429:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 24,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "446:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "450:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "446:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_50000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3530",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "458:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "463:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "463:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "458:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_50000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000"
															}
														],
														"id": 23,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "440:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "440:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "440:30:0"
											}
										]
									},
									"functionSelector": "88f6e28d",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 21,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 20,
												"name": "onlyOwner",
												"nameLocations": [
													"419:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 94,
												"src": "419:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "419:9:0"
										}
									],
									"name": "mintFifty",
									"nameLocation": "400:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:0"
									},
									"scope": 35,
									"src": "391:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 36,
							"src": "247:234:0",
							"usedErrors": [
								49,
								54,
								195,
								200,
								205,
								214,
								219,
								224
							],
							"usedEvents": [
								60,
								847,
								856
							]
						}
					],
					"src": "0:483:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							969
						],
						"Ownable": [
							183
						]
					},
					"id": 184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 37,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 39,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 184,
							"sourceUnit": 970,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 38,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 969,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 41,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "692:7:1"
									},
									"id": 42,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 40,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 183,
							"linearizedBaseContracts": [
								183,
								969
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 183,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 43,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 49,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 54,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 60,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 67,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 80,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 79,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 74,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 73,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 72,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 78,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 81,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 86,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 183,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 89,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 94,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 100,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 99,
												"id": 101,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 183,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 107,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 117,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 113,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 116,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 183,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 123,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 94,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 183,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 142,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 155,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 149,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 148,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 154,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 157,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 139,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 94,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 183,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 168,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"id": 170,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 173,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 177,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 178,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 183,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 184,
							"src": "663:2438:1",
							"usedErrors": [
								49,
								54
							],
							"usedEvents": [
								60
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							320
						],
						"IERC20Errors": [
							225
						],
						"IERC721Errors": [
							273
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 195,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 200,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 205,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 214,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 219,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 224,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 321,
							"src": "280:1764:2",
							"usedErrors": [
								195,
								200,
								205,
								214,
								219,
								224
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 273,
							"linearizedBaseContracts": [
								273
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 231,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 236,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 245,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 250,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 255,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 262,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 267,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 272,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 321,
							"src": "2190:2092:2",
							"usedErrors": [
								231,
								236,
								245,
								250,
								255,
								262,
								267,
								272
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 274,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 285,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 290,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 295,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 302,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 307,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 312,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 319,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 321,
							"src": "4430:2107:2",
							"usedErrors": [
								285,
								290,
								295,
								302,
								307,
								312,
								319
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							969
						],
						"ERC20": [
							835
						],
						"IERC20": [
							913
						],
						"IERC20Errors": [
							225
						],
						"IERC20Metadata": [
							939
						]
					},
					"id": 836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 836,
							"sourceUnit": 914,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 913,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 836,
							"sourceUnit": 940,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 939,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 836,
							"sourceUnit": 970,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 969,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 836,
							"sourceUnit": 321,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 332,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "1133:7:3"
									},
									"id": 333,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 334,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 913,
										"src": "1142:6:3"
									},
									"id": 335,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 336,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 939,
										"src": "1150:14:3"
									},
									"id": 337,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 338,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "1166:12:3"
									},
									"id": 339,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 331,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 835,
							"linearizedBaseContracts": [
								835,
								225,
								939,
								913,
								969
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 343,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 835,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 342,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 340,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 341,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 835,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 348,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 344,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 347,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 345,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 346,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 835,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 835,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 352,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 835,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 354,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 363,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 364,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 367,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 372,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 835,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										926
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 378,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 377,
												"id": 379,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 835,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										932
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 387,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 355,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 386,
												"id": 388,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 835,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										938
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 395,
												"id": 397,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 393,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 835,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 405,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 406,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 835,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										870
									],
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 416,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 418,
													"indexExpression": {
														"id": 417,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 415,
												"id": 419,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 835,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										880
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 431,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 433,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 437,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 430,
												"id": 443,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 835,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 455,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 457,
														"indexExpression": {
															"id": 456,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 459,
													"indexExpression": {
														"id": 458,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 454,
												"id": 460,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 835,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										900
									],
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 472,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 474,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															726,
															786
														],
														"referencedDeclaration": 726,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 471,
												"id": 484,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 835,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										912
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 517,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 498,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 500,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 497,
												"id": 516,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 835,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 528,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 529,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 535,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 534,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 540,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 544,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 557,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 556,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 550,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 549,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 555,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 835,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 576,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																587
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 587,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 612,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 586,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 591,
															"initialValue": {
																"baseExpression": {
																	"id": 588,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 590,
																"indexExpression": {
																	"id": 589,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 592,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 593,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 602,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 601,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 596,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 568,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 597,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 598,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 572,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 595,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 195,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 600,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 611,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 603,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 605,
																			"indexExpression": {
																				"id": 604,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 568,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 606,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 607,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 572,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 610,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 581,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 582,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 584,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 632,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 626,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 628,
																			"indexExpression": {
																				"id": 627,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 570,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 629,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 631,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 624,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 620,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 351,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 621,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 623,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 636,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 835,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 651,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 664,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 663,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 657,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 656,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 666,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 665,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 835,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 683,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 684,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 690,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 689,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 695,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 700,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 835,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 719,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 718,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															726,
															786
														],
														"referencedDeclaration": 786,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 835,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 753,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 754,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 767,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 766,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 760,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 759,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 768,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 771,
															"indexExpression": {
																"id": 769,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 772,
														"indexExpression": {
															"id": 770,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 773,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 776,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 735,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 729,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 779,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 780,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 777,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 782,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 835,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"id": 799,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 798,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 804,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 832,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 810,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 820,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 819,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 814,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 797,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 816,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 813,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 214,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 818,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 830,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 822,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 789,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 823,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 824,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 797,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 825,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 821,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				726,
																				786
																			],
																			"referencedDeclaration": 786,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 829,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 835,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 836,
							"src": "1106:9788:3",
							"usedErrors": [
								195,
								200,
								205,
								214,
								219,
								224
							],
							"usedEvents": [
								847,
								856
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							913
						]
					},
					"id": 914,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 837,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 913,
							"linearizedBaseContracts": [
								913
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 847,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 856,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 913,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 913,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 913,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 913,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 913,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 913,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 914,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								847,
								856
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							913
						],
						"IERC20Metadata": [
							939
						]
					},
					"id": 940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 915,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 914,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 916,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 913,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 919,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 913,
										"src": "306:6:5"
									},
									"id": 920,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 939,
							"linearizedBaseContracts": [
								939,
								913
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 923,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 939,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 929,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 939,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 935,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 939,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 940,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								847,
								856
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							969
						]
					},
					"id": 970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 942,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 969,
							"linearizedBaseContracts": [
								969
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 947,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 946,
												"id": 949,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 969,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 956,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 955,
												"id": 958,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 969,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 964,
												"id": 966,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 969,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 970,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			}
		}
	}
}